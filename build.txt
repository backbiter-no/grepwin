First make sure you've cloned the repository recursively to get the submodule
as well!

Then you need to install the compiler package.

- You need VS2022.
  If you want to build the msi make sure the "Tools for Redistributing
  Applications" are installed.

If you just want to build the exe without the installer and if you're comfortable
with the exe having version 1.0.0.0 in the resources, you can just open the
grepWin.sln file in Visual Studio and build the project.

If you want to use the build script you have to do a little bit more work first:

you need to install some utilities/programs:
- TortoiseGit           : http://tortoisegit.org
- WiX 3.10(*)           : http://wixtoolset.org/
- NAnt 0.92(*)          : http://nant.sourceforge.net

(*) Add the paths of the binaries to the PATH environment variable.
    You may have to logoff/logon to make the new environment variables take effect!

Now you're almost ready. Only a few more steps to do:
- Clone the grepWin repository from GitHub and checkout the source
  Note: you have to clone recursively to also get the submodules
- Make a copy of the file default.build.user.tmpl in the grepWin root folder and
  rename that copy to default.build.user. Then adjust the paths as mentioned
  in that file.


Building packages

  Hint: before you can start building grepWin with the NAnt script, you need to
  call the vcvars32.bat or vcvars64.bat which are located in
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build

  > nant
  will compile grepWin

  > nant setup
  will compile grepWin and create the msi installer

  If you encounter any build errors, you can run nant again like this:

  > nant setup -l:buildlog.txt

  which will create a build log file which you can use to analyse where
  exactly the build failed.


  After the script finished, the packages can be found in .\bin.

Once grepWin has been built with the NAnt script, you can build it again
with VS2022 alone and get the correct version info in the resources.
